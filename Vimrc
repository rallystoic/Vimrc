set number
syntax  enable
set hlsearch
"syntax enable
"set background=dark
"colorscheme solarized
" If installed using git
call plug#begin('~/.vim/plugged')
Plug 'neoclide/coc.nvim', {'branch': 'release'}
Plug 'tpope/vim-surround'
Plug 'scrooloose/nerdtree'
Plug 'vim-airline/vim-airline'
Plug 'tpope/vim-fugitive'
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'


Plug 'leafgarland/typescript-vim'
Plug 'suan/vim-instant-markdown', {'for': 'markdown'}

Plug 'xuhdev/vim-latex-live-preview', { 'for': 'tex' }


" snipmate
Plug 'MarcWeber/vim-addon-mw-utils'
Plug 'tomtom/tlib_vim'
Plug 'garbas/vim-snipmate'

Plug 'honza/vim-snippets'
call plug#end()

"disable ident
"let g:typescript_indent_disable = 1

"Nerdtree open automatically when start up
"autocmd vimenter * NERDTree
"map <C-t> :NERDTreeToggle<cr>
"ctrl-l = next
map <C-L> :tabn<cr>
"ctrl+h for tab left and ctrl+l for tab right
map <C-H> :tabp<cr>
"ctrl-h = previous
map <C-\> :FZF<cr>

map <F2> :tab new<cr>
""""""""""""Parentheses handling""""""""""
"inoremap ( ()<Esc>i
""""""""""""Bracer handling"""""""""""""""
"inoremap { {}<Esc>i
"inoremap < <><Esc>i
"inoremap [ []<Esc>i
"""""""""""Bracer handling"""""""""""""""
"buffer tab
"map <C-l>  :bn<cr>
"map <C-h>  :bp<cr>

"Enable true colors
if exists('+termguicolors')
  let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
  let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
  set termguicolors
endif

"English Dictionary for writing a document!
au FileType * execute 'setlocal dict+=~/.vim/words/'.&filetype.'.txt'.'.md'
set dictionary+=/usr/share/dict/words


"font setup
set guifont=ProggyClean



"markdown config
filetype plugin on
"let g:instant_markdown_browser = "firefox --new-window"
"Uncomment to override defaults:
""let g:instant_markdown_slow = 1
"let g:instant_markdown_autostart = 0
""let g:instant_markdown_open_to_the_world = 1
"let g:instant_markdown_allow_unsafe_content = 1
""let g:instant_markdown_allow_external_content = 0
"let g:instant_markdown_mathjax = 1
""let g:instant_markdown_logfile = '/tmp/instant_markdown.log'
"let g:instant_markdown_autoscroll = 0
"let g:instant_markdown_port = 8090
"let g:instant_markdown_python = 1
